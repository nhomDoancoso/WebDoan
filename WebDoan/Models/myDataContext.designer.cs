#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebDoan.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QuanLyDatLichCatToc")]
	public partial class myDataContextDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCOMBODICHVU(COMBODICHVU instance);
    partial void UpdateCOMBODICHVU(COMBODICHVU instance);
    partial void DeleteCOMBODICHVU(COMBODICHVU instance);
    partial void InsertSANPHAM(SANPHAM instance);
    partial void UpdateSANPHAM(SANPHAM instance);
    partial void DeleteSANPHAM(SANPHAM instance);
    partial void InsertCTCOMBO(CTCOMBO instance);
    partial void UpdateCTCOMBO(CTCOMBO instance);
    partial void DeleteCTCOMBO(CTCOMBO instance);
    partial void InsertCTLLV(CTLLV instance);
    partial void UpdateCTLLV(CTLLV instance);
    partial void DeleteCTLLV(CTLLV instance);
    partial void InsertCTPHIEUDAT(CTPHIEUDAT instance);
    partial void UpdateCTPHIEUDAT(CTPHIEUDAT instance);
    partial void DeleteCTPHIEUDAT(CTPHIEUDAT instance);
    partial void InsertCTHOADON(CTHOADON instance);
    partial void UpdateCTHOADON(CTHOADON instance);
    partial void DeleteCTHOADON(CTHOADON instance);
    partial void InsertCHINHANH(CHINHANH instance);
    partial void UpdateCHINHANH(CHINHANH instance);
    partial void DeleteCHINHANH(CHINHANH instance);
    partial void InsertCHUCVU(CHUCVU instance);
    partial void UpdateCHUCVU(CHUCVU instance);
    partial void DeleteCHUCVU(CHUCVU instance);
    partial void InsertDICHVU(DICHVU instance);
    partial void UpdateDICHVU(DICHVU instance);
    partial void DeleteDICHVU(DICHVU instance);
    partial void InsertHOADON(HOADON instance);
    partial void UpdateHOADON(HOADON instance);
    partial void DeleteHOADON(HOADON instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertLich(Lich instance);
    partial void UpdateLich(Lich instance);
    partial void DeleteLich(Lich instance);
    partial void InsertLOAIDICHVU(LOAIDICHVU instance);
    partial void UpdateLOAIDICHVU(LOAIDICHVU instance);
    partial void DeleteLOAIDICHVU(LOAIDICHVU instance);
    partial void InsertLOAISANPHAM(LOAISANPHAM instance);
    partial void UpdateLOAISANPHAM(LOAISANPHAM instance);
    partial void DeleteLOAISANPHAM(LOAISANPHAM instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertPHIEUDAT(PHIEUDAT instance);
    partial void UpdatePHIEUDAT(PHIEUDAT instance);
    partial void DeletePHIEUDAT(PHIEUDAT instance);
    #endregion
		
		public myDataContextDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QuanLyDatLichCatTocConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public myDataContextDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public myDataContextDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public myDataContextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public myDataContextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<COMBODICHVU> COMBODICHVUs
		{
			get
			{
				return this.GetTable<COMBODICHVU>();
			}
		}
		
		public System.Data.Linq.Table<SANPHAM> SANPHAMs
		{
			get
			{
				return this.GetTable<SANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<CTCOMBO> CTCOMBOs
		{
			get
			{
				return this.GetTable<CTCOMBO>();
			}
		}
		
		public System.Data.Linq.Table<CTLLV> CTLLVs
		{
			get
			{
				return this.GetTable<CTLLV>();
			}
		}
		
		public System.Data.Linq.Table<CTPHIEUDAT> CTPHIEUDATs
		{
			get
			{
				return this.GetTable<CTPHIEUDAT>();
			}
		}
		
		public System.Data.Linq.Table<CTHOADON> CTHOADONs
		{
			get
			{
				return this.GetTable<CTHOADON>();
			}
		}
		
		public System.Data.Linq.Table<CHINHANH> CHINHANHs
		{
			get
			{
				return this.GetTable<CHINHANH>();
			}
		}
		
		public System.Data.Linq.Table<CHUCVU> CHUCVUs
		{
			get
			{
				return this.GetTable<CHUCVU>();
			}
		}
		
		public System.Data.Linq.Table<DICHVU> DICHVUs
		{
			get
			{
				return this.GetTable<DICHVU>();
			}
		}
		
		public System.Data.Linq.Table<HOADON> HOADONs
		{
			get
			{
				return this.GetTable<HOADON>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<Lich> Liches
		{
			get
			{
				return this.GetTable<Lich>();
			}
		}
		
		public System.Data.Linq.Table<LOAIDICHVU> LOAIDICHVUs
		{
			get
			{
				return this.GetTable<LOAIDICHVU>();
			}
		}
		
		public System.Data.Linq.Table<LOAISANPHAM> LOAISANPHAMs
		{
			get
			{
				return this.GetTable<LOAISANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUDAT> PHIEUDATs
		{
			get
			{
				return this.GetTable<PHIEUDAT>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.COMBODICHVU")]
	public partial class COMBODICHVU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaCB;
		
		private string _TenCB;
		
		private string _HinhAnh;
		
		private System.Nullable<double> _Gia;
		
		private EntitySet<CTCOMBO> _CTCOMBOs;
		
		private EntitySet<CTPHIEUDAT> _CTPHIEUDATs;
		
		private EntitySet<CTHOADON> _CTHOADONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCBChanging(int value);
    partial void OnMaCBChanged();
    partial void OnTenCBChanging(string value);
    partial void OnTenCBChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    partial void OnGiaChanging(System.Nullable<double> value);
    partial void OnGiaChanged();
    #endregion
		
		public COMBODICHVU()
		{
			this._CTCOMBOs = new EntitySet<CTCOMBO>(new Action<CTCOMBO>(this.attach_CTCOMBOs), new Action<CTCOMBO>(this.detach_CTCOMBOs));
			this._CTPHIEUDATs = new EntitySet<CTPHIEUDAT>(new Action<CTPHIEUDAT>(this.attach_CTPHIEUDATs), new Action<CTPHIEUDAT>(this.detach_CTPHIEUDATs));
			this._CTHOADONs = new EntitySet<CTHOADON>(new Action<CTHOADON>(this.attach_CTHOADONs), new Action<CTHOADON>(this.detach_CTHOADONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCB", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaCB
		{
			get
			{
				return this._MaCB;
			}
			set
			{
				if ((this._MaCB != value))
				{
					this.OnMaCBChanging(value);
					this.SendPropertyChanging();
					this._MaCB = value;
					this.SendPropertyChanged("MaCB");
					this.OnMaCBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenCB", DbType="NVarChar(50)")]
		public string TenCB
		{
			get
			{
				return this._TenCB;
			}
			set
			{
				if ((this._TenCB != value))
				{
					this.OnTenCBChanging(value);
					this.SendPropertyChanging();
					this._TenCB = value;
					this.SendPropertyChanged("TenCB");
					this.OnTenCBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="NVarChar(50)")]
		public string HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Float")]
		public System.Nullable<double> Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COMBODICHVU_CTCOMBO", Storage="_CTCOMBOs", ThisKey="MaCB", OtherKey="MaCB")]
		public EntitySet<CTCOMBO> CTCOMBOs
		{
			get
			{
				return this._CTCOMBOs;
			}
			set
			{
				this._CTCOMBOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COMBODICHVU_CTPHIEUDAT", Storage="_CTPHIEUDATs", ThisKey="MaCB", OtherKey="MaCB")]
		public EntitySet<CTPHIEUDAT> CTPHIEUDATs
		{
			get
			{
				return this._CTPHIEUDATs;
			}
			set
			{
				this._CTPHIEUDATs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COMBODICHVU_CTHOADON", Storage="_CTHOADONs", ThisKey="MaCB", OtherKey="MaCB")]
		public EntitySet<CTHOADON> CTHOADONs
		{
			get
			{
				return this._CTHOADONs;
			}
			set
			{
				this._CTHOADONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTCOMBOs(CTCOMBO entity)
		{
			this.SendPropertyChanging();
			entity.COMBODICHVU = this;
		}
		
		private void detach_CTCOMBOs(CTCOMBO entity)
		{
			this.SendPropertyChanging();
			entity.COMBODICHVU = null;
		}
		
		private void attach_CTPHIEUDATs(CTPHIEUDAT entity)
		{
			this.SendPropertyChanging();
			entity.COMBODICHVU = this;
		}
		
		private void detach_CTPHIEUDATs(CTPHIEUDAT entity)
		{
			this.SendPropertyChanging();
			entity.COMBODICHVU = null;
		}
		
		private void attach_CTHOADONs(CTHOADON entity)
		{
			this.SendPropertyChanging();
			entity.COMBODICHVU = this;
		}
		
		private void detach_CTHOADONs(CTHOADON entity)
		{
			this.SendPropertyChanging();
			entity.COMBODICHVU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SANPHAM")]
	public partial class SANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSP;
		
		private string _TenSP;
		
		private System.Nullable<int> _MaLoaiSP;
		
		private System.Nullable<double> _Gia;
		
		private System.Nullable<int> _SoLuong;
		
		private string _Hinh;
		
		private EntitySet<CTHOADON> _CTHOADONs;
		
		private EntityRef<LOAISANPHAM> _LOAISANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSPChanging(int value);
    partial void OnMaSPChanged();
    partial void OnTenSPChanging(string value);
    partial void OnTenSPChanged();
    partial void OnMaLoaiSPChanging(System.Nullable<int> value);
    partial void OnMaLoaiSPChanged();
    partial void OnGiaChanging(System.Nullable<double> value);
    partial void OnGiaChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnHinhChanging(string value);
    partial void OnHinhChanged();
    #endregion
		
		public SANPHAM()
		{
			this._CTHOADONs = new EntitySet<CTHOADON>(new Action<CTHOADON>(this.attach_CTHOADONs), new Action<CTHOADON>(this.detach_CTHOADONs));
			this._LOAISANPHAM = default(EntityRef<LOAISANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSP", DbType="NVarChar(50)")]
		public string TenSP
		{
			get
			{
				return this._TenSP;
			}
			set
			{
				if ((this._TenSP != value))
				{
					this.OnTenSPChanging(value);
					this.SendPropertyChanging();
					this._TenSP = value;
					this.SendPropertyChanged("TenSP");
					this.OnTenSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiSP", DbType="Int")]
		public System.Nullable<int> MaLoaiSP
		{
			get
			{
				return this._MaLoaiSP;
			}
			set
			{
				if ((this._MaLoaiSP != value))
				{
					if (this._LOAISANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiSPChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiSP = value;
					this.SendPropertyChanged("MaLoaiSP");
					this.OnMaLoaiSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Float")]
		public System.Nullable<double> Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hinh", DbType="NVarChar(200)")]
		public string Hinh
		{
			get
			{
				return this._Hinh;
			}
			set
			{
				if ((this._Hinh != value))
				{
					this.OnHinhChanging(value);
					this.SendPropertyChanging();
					this._Hinh = value;
					this.SendPropertyChanged("Hinh");
					this.OnHinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CTHOADON", Storage="_CTHOADONs", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<CTHOADON> CTHOADONs
		{
			get
			{
				return this._CTHOADONs;
			}
			set
			{
				this._CTHOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISANPHAM_SANPHAM", Storage="_LOAISANPHAM", ThisKey="MaLoaiSP", OtherKey="MaLoaiSP", IsForeignKey=true, DeleteRule="CASCADE")]
		public LOAISANPHAM LOAISANPHAM
		{
			get
			{
				return this._LOAISANPHAM.Entity;
			}
			set
			{
				LOAISANPHAM previousValue = this._LOAISANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._LOAISANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAISANPHAM.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._LOAISANPHAM.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._MaLoaiSP = value.MaLoaiSP;
					}
					else
					{
						this._MaLoaiSP = default(Nullable<int>);
					}
					this.SendPropertyChanged("LOAISANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTHOADONs(CTHOADON entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CTHOADONs(CTHOADON entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTCOMBO")]
	public partial class CTCOMBO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaCB;
		
		private int _MaDV;
		
		private EntityRef<COMBODICHVU> _COMBODICHVU;
		
		private EntityRef<DICHVU> _DICHVU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCBChanging(int value);
    partial void OnMaCBChanged();
    partial void OnMaDVChanging(int value);
    partial void OnMaDVChanged();
    #endregion
		
		public CTCOMBO()
		{
			this._COMBODICHVU = default(EntityRef<COMBODICHVU>);
			this._DICHVU = default(EntityRef<DICHVU>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCB", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaCB
		{
			get
			{
				return this._MaCB;
			}
			set
			{
				if ((this._MaCB != value))
				{
					if (this._COMBODICHVU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCBChanging(value);
					this.SendPropertyChanging();
					this._MaCB = value;
					this.SendPropertyChanged("MaCB");
					this.OnMaCBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDV", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaDV
		{
			get
			{
				return this._MaDV;
			}
			set
			{
				if ((this._MaDV != value))
				{
					if (this._DICHVU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDVChanging(value);
					this.SendPropertyChanging();
					this._MaDV = value;
					this.SendPropertyChanged("MaDV");
					this.OnMaDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COMBODICHVU_CTCOMBO", Storage="_COMBODICHVU", ThisKey="MaCB", OtherKey="MaCB", IsForeignKey=true)]
		public COMBODICHVU COMBODICHVU
		{
			get
			{
				return this._COMBODICHVU.Entity;
			}
			set
			{
				COMBODICHVU previousValue = this._COMBODICHVU.Entity;
				if (((previousValue != value) 
							|| (this._COMBODICHVU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._COMBODICHVU.Entity = null;
						previousValue.CTCOMBOs.Remove(this);
					}
					this._COMBODICHVU.Entity = value;
					if ((value != null))
					{
						value.CTCOMBOs.Add(this);
						this._MaCB = value.MaCB;
					}
					else
					{
						this._MaCB = default(int);
					}
					this.SendPropertyChanged("COMBODICHVU");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DICHVU_CTCOMBO", Storage="_DICHVU", ThisKey="MaDV", OtherKey="MaDV", IsForeignKey=true)]
		public DICHVU DICHVU
		{
			get
			{
				return this._DICHVU.Entity;
			}
			set
			{
				DICHVU previousValue = this._DICHVU.Entity;
				if (((previousValue != value) 
							|| (this._DICHVU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DICHVU.Entity = null;
						previousValue.CTCOMBOs.Remove(this);
					}
					this._DICHVU.Entity = value;
					if ((value != null))
					{
						value.CTCOMBOs.Add(this);
						this._MaDV = value.MaDV;
					}
					else
					{
						this._MaDV = default(int);
					}
					this.SendPropertyChanged("DICHVU");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTLLV")]
	public partial class CTLLV : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTime;
		
		private int _MaNV;
		
		private EntityRef<Lich> _Lich;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTimeChanging(int value);
    partial void OnMaTimeChanged();
    partial void OnMaNVChanging(int value);
    partial void OnMaNVChanged();
    #endregion
		
		public CTLLV()
		{
			this._Lich = default(EntityRef<Lich>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTime", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaTime
		{
			get
			{
				return this._MaTime;
			}
			set
			{
				if ((this._MaTime != value))
				{
					if (this._Lich.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTimeChanging(value);
					this.SendPropertyChanging();
					this._MaTime = value;
					this.SendPropertyChanged("MaTime");
					this.OnMaTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lich_CTLLV", Storage="_Lich", ThisKey="MaTime", OtherKey="MaTime", IsForeignKey=true)]
		public Lich Lich
		{
			get
			{
				return this._Lich.Entity;
			}
			set
			{
				Lich previousValue = this._Lich.Entity;
				if (((previousValue != value) 
							|| (this._Lich.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lich.Entity = null;
						previousValue.CTLLVs.Remove(this);
					}
					this._Lich.Entity = value;
					if ((value != null))
					{
						value.CTLLVs.Add(this);
						this._MaTime = value.MaTime;
					}
					else
					{
						this._MaTime = default(int);
					}
					this.SendPropertyChanged("Lich");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_CTLLV", Storage="_NHANVIEN", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.CTLLVs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.CTLLVs.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(int);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTPHIEUDAT")]
	public partial class CTPHIEUDAT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPD;
		
		private int _MaCB;
		
		private EntityRef<COMBODICHVU> _COMBODICHVU;
		
		private EntityRef<PHIEUDAT> _PHIEUDAT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPDChanging(int value);
    partial void OnMaPDChanged();
    partial void OnMaCBChanging(int value);
    partial void OnMaCBChanged();
    #endregion
		
		public CTPHIEUDAT()
		{
			this._COMBODICHVU = default(EntityRef<COMBODICHVU>);
			this._PHIEUDAT = default(EntityRef<PHIEUDAT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPD", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaPD
		{
			get
			{
				return this._MaPD;
			}
			set
			{
				if ((this._MaPD != value))
				{
					if (this._PHIEUDAT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPDChanging(value);
					this.SendPropertyChanging();
					this._MaPD = value;
					this.SendPropertyChanged("MaPD");
					this.OnMaPDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCB", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaCB
		{
			get
			{
				return this._MaCB;
			}
			set
			{
				if ((this._MaCB != value))
				{
					if (this._COMBODICHVU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCBChanging(value);
					this.SendPropertyChanging();
					this._MaCB = value;
					this.SendPropertyChanged("MaCB");
					this.OnMaCBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COMBODICHVU_CTPHIEUDAT", Storage="_COMBODICHVU", ThisKey="MaCB", OtherKey="MaCB", IsForeignKey=true)]
		public COMBODICHVU COMBODICHVU
		{
			get
			{
				return this._COMBODICHVU.Entity;
			}
			set
			{
				COMBODICHVU previousValue = this._COMBODICHVU.Entity;
				if (((previousValue != value) 
							|| (this._COMBODICHVU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._COMBODICHVU.Entity = null;
						previousValue.CTPHIEUDATs.Remove(this);
					}
					this._COMBODICHVU.Entity = value;
					if ((value != null))
					{
						value.CTPHIEUDATs.Add(this);
						this._MaCB = value.MaCB;
					}
					else
					{
						this._MaCB = default(int);
					}
					this.SendPropertyChanged("COMBODICHVU");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUDAT_CTPHIEUDAT", Storage="_PHIEUDAT", ThisKey="MaPD", OtherKey="MaPD", IsForeignKey=true)]
		public PHIEUDAT PHIEUDAT
		{
			get
			{
				return this._PHIEUDAT.Entity;
			}
			set
			{
				PHIEUDAT previousValue = this._PHIEUDAT.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUDAT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUDAT.Entity = null;
						previousValue.CTPHIEUDATs.Remove(this);
					}
					this._PHIEUDAT.Entity = value;
					if ((value != null))
					{
						value.CTPHIEUDATs.Add(this);
						this._MaPD = value.MaPD;
					}
					else
					{
						this._MaPD = default(int);
					}
					this.SendPropertyChanged("PHIEUDAT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTHOADON")]
	public partial class CTHOADON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHD;
		
		private int _MaCB;
		
		private System.Nullable<double> _Gia;
		
		private int _MaSP;
		
		private EntityRef<COMBODICHVU> _COMBODICHVU;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
		private EntityRef<HOADON> _HOADON;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHDChanging(int value);
    partial void OnMaHDChanged();
    partial void OnMaCBChanging(int value);
    partial void OnMaCBChanged();
    partial void OnGiaChanging(System.Nullable<double> value);
    partial void OnGiaChanged();
    partial void OnMaSPChanging(int value);
    partial void OnMaSPChanged();
    #endregion
		
		public CTHOADON()
		{
			this._COMBODICHVU = default(EntityRef<COMBODICHVU>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			this._HOADON = default(EntityRef<HOADON>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHD", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaHD
		{
			get
			{
				return this._MaHD;
			}
			set
			{
				if ((this._MaHD != value))
				{
					if (this._HOADON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHDChanging(value);
					this.SendPropertyChanging();
					this._MaHD = value;
					this.SendPropertyChanged("MaHD");
					this.OnMaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCB", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaCB
		{
			get
			{
				return this._MaCB;
			}
			set
			{
				if ((this._MaCB != value))
				{
					if (this._COMBODICHVU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCBChanging(value);
					this.SendPropertyChanging();
					this._MaCB = value;
					this.SendPropertyChanged("MaCB");
					this.OnMaCBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Float")]
		public System.Nullable<double> Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COMBODICHVU_CTHOADON", Storage="_COMBODICHVU", ThisKey="MaCB", OtherKey="MaCB", IsForeignKey=true)]
		public COMBODICHVU COMBODICHVU
		{
			get
			{
				return this._COMBODICHVU.Entity;
			}
			set
			{
				COMBODICHVU previousValue = this._COMBODICHVU.Entity;
				if (((previousValue != value) 
							|| (this._COMBODICHVU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._COMBODICHVU.Entity = null;
						previousValue.CTHOADONs.Remove(this);
					}
					this._COMBODICHVU.Entity = value;
					if ((value != null))
					{
						value.CTHOADONs.Add(this);
						this._MaCB = value.MaCB;
					}
					else
					{
						this._MaCB = default(int);
					}
					this.SendPropertyChanged("COMBODICHVU");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CTHOADON", Storage="_SANPHAM", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CTHOADONs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CTHOADONs.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(int);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CTHOADON", Storage="_HOADON", ThisKey="MaHD", OtherKey="MaHD", IsForeignKey=true)]
		public HOADON HOADON
		{
			get
			{
				return this._HOADON.Entity;
			}
			set
			{
				HOADON previousValue = this._HOADON.Entity;
				if (((previousValue != value) 
							|| (this._HOADON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOADON.Entity = null;
						previousValue.CTHOADONs.Remove(this);
					}
					this._HOADON.Entity = value;
					if ((value != null))
					{
						value.CTHOADONs.Add(this);
						this._MaHD = value.MaHD;
					}
					else
					{
						this._MaHD = default(int);
					}
					this.SendPropertyChanged("HOADON");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHINHANH")]
	public partial class CHINHANH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaCN;
		
		private string _DiaChi;
		
		private string _HotLine;
		
		private EntitySet<PHIEUDAT> _PHIEUDATs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCNChanging(int value);
    partial void OnMaCNChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnHotLineChanging(string value);
    partial void OnHotLineChanged();
    #endregion
		
		public CHINHANH()
		{
			this._PHIEUDATs = new EntitySet<PHIEUDAT>(new Action<PHIEUDAT>(this.attach_PHIEUDATs), new Action<PHIEUDAT>(this.detach_PHIEUDATs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCN", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaCN
		{
			get
			{
				return this._MaCN;
			}
			set
			{
				if ((this._MaCN != value))
				{
					this.OnMaCNChanging(value);
					this.SendPropertyChanging();
					this._MaCN = value;
					this.SendPropertyChanged("MaCN");
					this.OnMaCNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HotLine", DbType="VarChar(10)")]
		public string HotLine
		{
			get
			{
				return this._HotLine;
			}
			set
			{
				if ((this._HotLine != value))
				{
					this.OnHotLineChanging(value);
					this.SendPropertyChanging();
					this._HotLine = value;
					this.SendPropertyChanged("HotLine");
					this.OnHotLineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHINHANH_PHIEUDAT", Storage="_PHIEUDATs", ThisKey="MaCN", OtherKey="MaCN")]
		public EntitySet<PHIEUDAT> PHIEUDATs
		{
			get
			{
				return this._PHIEUDATs;
			}
			set
			{
				this._PHIEUDATs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIEUDATs(PHIEUDAT entity)
		{
			this.SendPropertyChanging();
			entity.CHINHANH = this;
		}
		
		private void detach_PHIEUDATs(PHIEUDAT entity)
		{
			this.SendPropertyChanging();
			entity.CHINHANH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHUCVU")]
	public partial class CHUCVU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaCV;
		
		private string _TenCV;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCVChanging(int value);
    partial void OnMaCVChanged();
    partial void OnTenCVChanging(string value);
    partial void OnTenCVChanged();
    #endregion
		
		public CHUCVU()
		{
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaCV
		{
			get
			{
				return this._MaCV;
			}
			set
			{
				if ((this._MaCV != value))
				{
					this.OnMaCVChanging(value);
					this.SendPropertyChanging();
					this._MaCV = value;
					this.SendPropertyChanged("MaCV");
					this.OnMaCVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenCV", DbType="NVarChar(50)")]
		public string TenCV
		{
			get
			{
				return this._TenCV;
			}
			set
			{
				if ((this._TenCV != value))
				{
					this.OnTenCVChanging(value);
					this.SendPropertyChanging();
					this._TenCV = value;
					this.SendPropertyChanged("TenCV");
					this.OnTenCVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUCVU_NHANVIEN", Storage="_NHANVIENs", ThisKey="MaCV", OtherKey="MaCV")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.CHUCVU = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.CHUCVU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DICHVU")]
	public partial class DICHVU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDV;
		
		private string _TenDV;
		
		private System.Nullable<double> _Gia;
		
		private string _MaLoaiDV;
		
		private EntitySet<CTCOMBO> _CTCOMBOs;
		
		private EntityRef<LOAIDICHVU> _LOAIDICHVU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDVChanging(int value);
    partial void OnMaDVChanged();
    partial void OnTenDVChanging(string value);
    partial void OnTenDVChanged();
    partial void OnGiaChanging(System.Nullable<double> value);
    partial void OnGiaChanged();
    partial void OnMaLoaiDVChanging(string value);
    partial void OnMaLoaiDVChanged();
    #endregion
		
		public DICHVU()
		{
			this._CTCOMBOs = new EntitySet<CTCOMBO>(new Action<CTCOMBO>(this.attach_CTCOMBOs), new Action<CTCOMBO>(this.detach_CTCOMBOs));
			this._LOAIDICHVU = default(EntityRef<LOAIDICHVU>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDV
		{
			get
			{
				return this._MaDV;
			}
			set
			{
				if ((this._MaDV != value))
				{
					this.OnMaDVChanging(value);
					this.SendPropertyChanging();
					this._MaDV = value;
					this.SendPropertyChanged("MaDV");
					this.OnMaDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDV", DbType="NVarChar(50)")]
		public string TenDV
		{
			get
			{
				return this._TenDV;
			}
			set
			{
				if ((this._TenDV != value))
				{
					this.OnTenDVChanging(value);
					this.SendPropertyChanging();
					this._TenDV = value;
					this.SendPropertyChanged("TenDV");
					this.OnTenDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Float")]
		public System.Nullable<double> Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiDV", DbType="VarChar(50)")]
		public string MaLoaiDV
		{
			get
			{
				return this._MaLoaiDV;
			}
			set
			{
				if ((this._MaLoaiDV != value))
				{
					if (this._LOAIDICHVU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiDVChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiDV = value;
					this.SendPropertyChanged("MaLoaiDV");
					this.OnMaLoaiDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DICHVU_CTCOMBO", Storage="_CTCOMBOs", ThisKey="MaDV", OtherKey="MaDV")]
		public EntitySet<CTCOMBO> CTCOMBOs
		{
			get
			{
				return this._CTCOMBOs;
			}
			set
			{
				this._CTCOMBOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIDICHVU_DICHVU", Storage="_LOAIDICHVU", ThisKey="MaLoaiDV", OtherKey="MaLoaiDV", IsForeignKey=true, DeleteRule="CASCADE")]
		public LOAIDICHVU LOAIDICHVU
		{
			get
			{
				return this._LOAIDICHVU.Entity;
			}
			set
			{
				LOAIDICHVU previousValue = this._LOAIDICHVU.Entity;
				if (((previousValue != value) 
							|| (this._LOAIDICHVU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAIDICHVU.Entity = null;
						previousValue.DICHVUs.Remove(this);
					}
					this._LOAIDICHVU.Entity = value;
					if ((value != null))
					{
						value.DICHVUs.Add(this);
						this._MaLoaiDV = value.MaLoaiDV;
					}
					else
					{
						this._MaLoaiDV = default(string);
					}
					this.SendPropertyChanged("LOAIDICHVU");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTCOMBOs(CTCOMBO entity)
		{
			this.SendPropertyChanging();
			entity.DICHVU = this;
		}
		
		private void detach_CTCOMBOs(CTCOMBO entity)
		{
			this.SendPropertyChanging();
			entity.DICHVU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOADON")]
	public partial class HOADON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHD;
		
		private System.Nullable<int> _MaKH;
		
		private System.Nullable<int> _MaNV;
		
		private System.Nullable<System.DateTime> _NgayLap;
		
		private EntitySet<CTHOADON> _CTHOADONs;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHDChanging(int value);
    partial void OnMaHDChanged();
    partial void OnMaKHChanging(System.Nullable<int> value);
    partial void OnMaKHChanged();
    partial void OnMaNVChanging(System.Nullable<int> value);
    partial void OnMaNVChanged();
    partial void OnNgayLapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayLapChanged();
    #endregion
		
		public HOADON()
		{
			this._CTHOADONs = new EntitySet<CTHOADON>(new Action<CTHOADON>(this.attach_CTHOADONs), new Action<CTHOADON>(this.detach_CTHOADONs));
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHD", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaHD
		{
			get
			{
				return this._MaHD;
			}
			set
			{
				if ((this._MaHD != value))
				{
					this.OnMaHDChanging(value);
					this.SendPropertyChanging();
					this._MaHD = value;
					this.SendPropertyChanged("MaHD");
					this.OnMaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Int")]
		public System.Nullable<int> MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Int")]
		public System.Nullable<int> MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLap", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayLap
		{
			get
			{
				return this._NgayLap;
			}
			set
			{
				if ((this._NgayLap != value))
				{
					this.OnNgayLapChanging(value);
					this.SendPropertyChanging();
					this._NgayLap = value;
					this.SendPropertyChanged("NgayLap");
					this.OnNgayLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CTHOADON", Storage="_CTHOADONs", ThisKey="MaHD", OtherKey="MaHD")]
		public EntitySet<CTHOADON> CTHOADONs
		{
			get
			{
				return this._CTHOADONs;
			}
			set
			{
				this._CTHOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADON", Storage="_KHACHHANG", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(Nullable<int>);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOADON", Storage="_NHANVIEN", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTHOADONs(CTHOADON entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = this;
		}
		
		private void detach_CTHOADONs(CTHOADON entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKH;
		
		private string _Email;
		
		private string _UserName;
		
		private string _Password;
		
		private System.Nullable<bool> _IsValid;
		
		private string _TenKH;
		
		private string _SDT;
		
		private EntitySet<HOADON> _HOADONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKHChanging(int value);
    partial void OnMaKHChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnIsValidChanging(System.Nullable<bool> value);
    partial void OnIsValidChanged();
    partial void OnTenKHChanging(string value);
    partial void OnTenKHChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="Char(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="Char(100)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="Char(100)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsValid", DbType="Bit")]
		public System.Nullable<bool> IsValid
		{
			get
			{
				return this._IsValid;
			}
			set
			{
				if ((this._IsValid != value))
				{
					this.OnIsValidChanging(value);
					this.SendPropertyChanging();
					this._IsValid = value;
					this.SendPropertyChanged("IsValid");
					this.OnIsValidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKH", DbType="NVarChar(50)")]
		public string TenKH
		{
			get
			{
				return this._TenKH;
			}
			set
			{
				if ((this._TenKH != value))
				{
					this.OnTenKHChanging(value);
					this.SendPropertyChanging();
					this._TenKH = value;
					this.SendPropertyChanged("TenKH");
					this.OnTenKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(20)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADON", Storage="_HOADONs", ThisKey="MaKH", OtherKey="MaKH")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lich")]
	public partial class Lich : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTime;
		
		private System.Nullable<System.TimeSpan> _Time;
		
		private EntitySet<CTLLV> _CTLLVs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTimeChanging(int value);
    partial void OnMaTimeChanged();
    partial void OnTimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnTimeChanged();
    #endregion
		
		public Lich()
		{
			this._CTLLVs = new EntitySet<CTLLV>(new Action<CTLLV>(this.attach_CTLLVs), new Action<CTLLV>(this.detach_CTLLVs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTime", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaTime
		{
			get
			{
				return this._MaTime;
			}
			set
			{
				if ((this._MaTime != value))
				{
					this.OnMaTimeChanging(value);
					this.SendPropertyChanging();
					this._MaTime = value;
					this.SendPropertyChanged("MaTime");
					this.OnMaTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="Time")]
		public System.Nullable<System.TimeSpan> Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lich_CTLLV", Storage="_CTLLVs", ThisKey="MaTime", OtherKey="MaTime")]
		public EntitySet<CTLLV> CTLLVs
		{
			get
			{
				return this._CTLLVs;
			}
			set
			{
				this._CTLLVs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTLLVs(CTLLV entity)
		{
			this.SendPropertyChanging();
			entity.Lich = this;
		}
		
		private void detach_CTLLVs(CTLLV entity)
		{
			this.SendPropertyChanging();
			entity.Lich = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAIDICHVU")]
	public partial class LOAIDICHVU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLoaiDV;
		
		private string _TenLoaiDV;
		
		private EntitySet<DICHVU> _DICHVUs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiDVChanging(string value);
    partial void OnMaLoaiDVChanged();
    partial void OnTenLoaiDVChanging(string value);
    partial void OnTenLoaiDVChanged();
    #endregion
		
		public LOAIDICHVU()
		{
			this._DICHVUs = new EntitySet<DICHVU>(new Action<DICHVU>(this.attach_DICHVUs), new Action<DICHVU>(this.detach_DICHVUs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiDV", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLoaiDV
		{
			get
			{
				return this._MaLoaiDV;
			}
			set
			{
				if ((this._MaLoaiDV != value))
				{
					this.OnMaLoaiDVChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiDV = value;
					this.SendPropertyChanged("MaLoaiDV");
					this.OnMaLoaiDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiDV", DbType="NVarChar(50)")]
		public string TenLoaiDV
		{
			get
			{
				return this._TenLoaiDV;
			}
			set
			{
				if ((this._TenLoaiDV != value))
				{
					this.OnTenLoaiDVChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiDV = value;
					this.SendPropertyChanged("TenLoaiDV");
					this.OnTenLoaiDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIDICHVU_DICHVU", Storage="_DICHVUs", ThisKey="MaLoaiDV", OtherKey="MaLoaiDV")]
		public EntitySet<DICHVU> DICHVUs
		{
			get
			{
				return this._DICHVUs;
			}
			set
			{
				this._DICHVUs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DICHVUs(DICHVU entity)
		{
			this.SendPropertyChanging();
			entity.LOAIDICHVU = this;
		}
		
		private void detach_DICHVUs(DICHVU entity)
		{
			this.SendPropertyChanging();
			entity.LOAIDICHVU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAISANPHAM")]
	public partial class LOAISANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLoaiSP;
		
		private string _TenLoaiSP;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiSPChanging(int value);
    partial void OnMaLoaiSPChanged();
    partial void OnTenLoaiSPChanging(string value);
    partial void OnTenLoaiSPChanged();
    #endregion
		
		public LOAISANPHAM()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiSP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaLoaiSP
		{
			get
			{
				return this._MaLoaiSP;
			}
			set
			{
				if ((this._MaLoaiSP != value))
				{
					this.OnMaLoaiSPChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiSP = value;
					this.SendPropertyChanged("MaLoaiSP");
					this.OnMaLoaiSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiSP", DbType="NVarChar(50)")]
		public string TenLoaiSP
		{
			get
			{
				return this._TenLoaiSP;
			}
			set
			{
				if ((this._TenLoaiSP != value))
				{
					this.OnTenLoaiSPChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiSP = value;
					this.SendPropertyChanged("TenLoaiSP");
					this.OnTenLoaiSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISANPHAM_SANPHAM", Storage="_SANPHAMs", ThisKey="MaLoaiSP", OtherKey="MaLoaiSP")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.LOAISANPHAM = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.LOAISANPHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNV;
		
		private string _HinhNV;
		
		private string _TenNV;
		
		private string _SDT;
		
		private string _DiaChi;
		
		private string _Email;
		
		private string _UserName;
		
		private string _Password;
		
		private System.Nullable<bool> _IsValid;
		
		private int _MaCV;
		
		private System.Nullable<bool> _RememberMe;
		
		private EntitySet<CTLLV> _CTLLVs;
		
		private EntitySet<HOADON> _HOADONs;
		
		private EntitySet<PHIEUDAT> _PHIEUDATs;
		
		private EntityRef<CHUCVU> _CHUCVU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(int value);
    partial void OnMaNVChanged();
    partial void OnHinhNVChanging(string value);
    partial void OnHinhNVChanged();
    partial void OnTenNVChanging(string value);
    partial void OnTenNVChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnIsValidChanging(System.Nullable<bool> value);
    partial void OnIsValidChanged();
    partial void OnMaCVChanging(int value);
    partial void OnMaCVChanged();
    partial void OnRememberMeChanging(System.Nullable<bool> value);
    partial void OnRememberMeChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._CTLLVs = new EntitySet<CTLLV>(new Action<CTLLV>(this.attach_CTLLVs), new Action<CTLLV>(this.detach_CTLLVs));
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			this._PHIEUDATs = new EntitySet<PHIEUDAT>(new Action<PHIEUDAT>(this.attach_PHIEUDATs), new Action<PHIEUDAT>(this.detach_PHIEUDATs));
			this._CHUCVU = default(EntityRef<CHUCVU>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhNV", DbType="NVarChar(50)")]
		public string HinhNV
		{
			get
			{
				return this._HinhNV;
			}
			set
			{
				if ((this._HinhNV != value))
				{
					this.OnHinhNVChanging(value);
					this.SendPropertyChanging();
					this._HinhNV = value;
					this.SendPropertyChanged("HinhNV");
					this.OnHinhNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNV", DbType="NVarChar(50)")]
		public string TenNV
		{
			get
			{
				return this._TenNV;
			}
			set
			{
				if ((this._TenNV != value))
				{
					this.OnTenNVChanging(value);
					this.SendPropertyChanging();
					this._TenNV = value;
					this.SendPropertyChanged("TenNV");
					this.OnTenNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Char(10)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="Char(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="Char(100)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="Char(100)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsValid", DbType="Bit")]
		public System.Nullable<bool> IsValid
		{
			get
			{
				return this._IsValid;
			}
			set
			{
				if ((this._IsValid != value))
				{
					this.OnIsValidChanging(value);
					this.SendPropertyChanging();
					this._IsValid = value;
					this.SendPropertyChanged("IsValid");
					this.OnIsValidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCV", DbType="Int NOT NULL")]
		public int MaCV
		{
			get
			{
				return this._MaCV;
			}
			set
			{
				if ((this._MaCV != value))
				{
					if (this._CHUCVU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCVChanging(value);
					this.SendPropertyChanging();
					this._MaCV = value;
					this.SendPropertyChanged("MaCV");
					this.OnMaCVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RememberMe", DbType="Bit")]
		public System.Nullable<bool> RememberMe
		{
			get
			{
				return this._RememberMe;
			}
			set
			{
				if ((this._RememberMe != value))
				{
					this.OnRememberMeChanging(value);
					this.SendPropertyChanging();
					this._RememberMe = value;
					this.SendPropertyChanged("RememberMe");
					this.OnRememberMeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_CTLLV", Storage="_CTLLVs", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<CTLLV> CTLLVs
		{
			get
			{
				return this._CTLLVs;
			}
			set
			{
				this._CTLLVs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOADON", Storage="_HOADONs", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUDAT", Storage="_PHIEUDATs", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<PHIEUDAT> PHIEUDATs
		{
			get
			{
				return this._PHIEUDATs;
			}
			set
			{
				this._PHIEUDATs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUCVU_NHANVIEN", Storage="_CHUCVU", ThisKey="MaCV", OtherKey="MaCV", IsForeignKey=true)]
		public CHUCVU CHUCVU
		{
			get
			{
				return this._CHUCVU.Entity;
			}
			set
			{
				CHUCVU previousValue = this._CHUCVU.Entity;
				if (((previousValue != value) 
							|| (this._CHUCVU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHUCVU.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._CHUCVU.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._MaCV = value.MaCV;
					}
					else
					{
						this._MaCV = default(int);
					}
					this.SendPropertyChanged("CHUCVU");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTLLVs(CTLLV entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_CTLLVs(CTLLV entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_PHIEUDATs(PHIEUDAT entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_PHIEUDATs(PHIEUDAT entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUDAT")]
	public partial class PHIEUDAT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPD;
		
		private System.Nullable<int> _MaNV;
		
		private System.Nullable<System.DateTime> _TimeLap;
		
		private System.Nullable<System.DateTime> _TimeHen;
		
		private System.Nullable<int> _MaCN;
		
		private string _TenKH;
		
		private string _SDT;
		
		private EntitySet<CTPHIEUDAT> _CTPHIEUDATs;
		
		private EntityRef<CHINHANH> _CHINHANH;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPDChanging(int value);
    partial void OnMaPDChanged();
    partial void OnMaNVChanging(System.Nullable<int> value);
    partial void OnMaNVChanged();
    partial void OnTimeLapChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeLapChanged();
    partial void OnTimeHenChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeHenChanged();
    partial void OnMaCNChanging(System.Nullable<int> value);
    partial void OnMaCNChanged();
    partial void OnTenKHChanging(string value);
    partial void OnTenKHChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    #endregion
		
		public PHIEUDAT()
		{
			this._CTPHIEUDATs = new EntitySet<CTPHIEUDAT>(new Action<CTPHIEUDAT>(this.attach_CTPHIEUDATs), new Action<CTPHIEUDAT>(this.detach_CTPHIEUDATs));
			this._CHINHANH = default(EntityRef<CHINHANH>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPD", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaPD
		{
			get
			{
				return this._MaPD;
			}
			set
			{
				if ((this._MaPD != value))
				{
					this.OnMaPDChanging(value);
					this.SendPropertyChanging();
					this._MaPD = value;
					this.SendPropertyChanged("MaPD");
					this.OnMaPDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Int")]
		public System.Nullable<int> MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeLap", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeLap
		{
			get
			{
				return this._TimeLap;
			}
			set
			{
				if ((this._TimeLap != value))
				{
					this.OnTimeLapChanging(value);
					this.SendPropertyChanging();
					this._TimeLap = value;
					this.SendPropertyChanged("TimeLap");
					this.OnTimeLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeHen", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeHen
		{
			get
			{
				return this._TimeHen;
			}
			set
			{
				if ((this._TimeHen != value))
				{
					this.OnTimeHenChanging(value);
					this.SendPropertyChanging();
					this._TimeHen = value;
					this.SendPropertyChanged("TimeHen");
					this.OnTimeHenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCN", DbType="Int")]
		public System.Nullable<int> MaCN
		{
			get
			{
				return this._MaCN;
			}
			set
			{
				if ((this._MaCN != value))
				{
					if (this._CHINHANH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCNChanging(value);
					this.SendPropertyChanging();
					this._MaCN = value;
					this.SendPropertyChanged("MaCN");
					this.OnMaCNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKH", DbType="NVarChar(50)")]
		public string TenKH
		{
			get
			{
				return this._TenKH;
			}
			set
			{
				if ((this._TenKH != value))
				{
					this.OnTenKHChanging(value);
					this.SendPropertyChanging();
					this._TenKH = value;
					this.SendPropertyChanged("TenKH");
					this.OnTenKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(20)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUDAT_CTPHIEUDAT", Storage="_CTPHIEUDATs", ThisKey="MaPD", OtherKey="MaPD")]
		public EntitySet<CTPHIEUDAT> CTPHIEUDATs
		{
			get
			{
				return this._CTPHIEUDATs;
			}
			set
			{
				this._CTPHIEUDATs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHINHANH_PHIEUDAT", Storage="_CHINHANH", ThisKey="MaCN", OtherKey="MaCN", IsForeignKey=true)]
		public CHINHANH CHINHANH
		{
			get
			{
				return this._CHINHANH.Entity;
			}
			set
			{
				CHINHANH previousValue = this._CHINHANH.Entity;
				if (((previousValue != value) 
							|| (this._CHINHANH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHINHANH.Entity = null;
						previousValue.PHIEUDATs.Remove(this);
					}
					this._CHINHANH.Entity = value;
					if ((value != null))
					{
						value.PHIEUDATs.Add(this);
						this._MaCN = value.MaCN;
					}
					else
					{
						this._MaCN = default(Nullable<int>);
					}
					this.SendPropertyChanged("CHINHANH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUDAT", Storage="_NHANVIEN", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.PHIEUDATs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.PHIEUDATs.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTPHIEUDATs(CTPHIEUDAT entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUDAT = this;
		}
		
		private void detach_CTPHIEUDATs(CTPHIEUDAT entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUDAT = null;
		}
	}
}
#pragma warning restore 1591
